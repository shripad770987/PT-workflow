name: Run Jmeter scripts

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      JmeterAPIscript1:
        description: Name of Script1 to run
        type: string
        required: true
      JmeterAPIscript2:
        description: Name of Script2 to run
        type: string
        required: true
      JmeterUIscript1:
        description: Name of Script1 to run
        type: string
        required: true
      JmeterUIscript2:
        description: Name of Script2 to run
        type: string
        required: true
env:
  JmeterAPIscript1: ${{ inputs.JmeterAPIscript1 }}
  JmeterAPIscript2: ${{ inputs.JmeterAPIscript2 }}
  JmeterUIscript1: ${{ inputs.JmeterUIscript1 }}
  JmeterUIscript2: ${{ inputs.JmeterUIscript2 }}
  
# A workflow run is made up of one or more jobs that can run sequentially
jobs:
  jmeter_API_job:
# This job will run on AWS ECS API Runner in sequence 
    runs-on: performanceAPI
    
# Git Checks-out our repository      
    name: JMeter Test Execution
    steps:    
    - name: scripts to be executed
      run: |
        echo "$JmeterAPIscript1"
        echo "$JmeterAPIscript2"
        
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2 
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install requests boto3 pandas openpyxl

   # Run the Jmeter test cases
    - name: Running JMeter for Jmeter-API-script-1
      run: |
      comp=${{ github.event.inputs.comp }}
        echo "Component selected: $comp"
        in_section=false
        while IFS= read -r line; do
          if [[ $line == "$comp:" ]]; then
            in_section=true
            continue
          elif [[ $line == *:* ]]; then
            in_section=false
          fi

          if $in_section; then
            echo "Running script: $line"
            jmeter -n -t $line
            echo "Running JMeter HTML for $JmeterAPIscript1"
            jmeter -Jjmeter.reportgenerator.exporter.html.series_filter="((T[0-9] {1,3}_))" -g ./SampleAPIjtl1.jtl -o ./HTMLReport1
          fi
        done < scripts_to_run.txt
       
    
